<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Claudio Ortolina</title><link>http://claudio-ortolina.org/</link><description>Recent content on Claudio Ortolina</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Tue, 03 Nov 2020 11:42:42 +0000</lastBuildDate><atom:link href="http://claudio-ortolina.org/index.xml" rel="self" type="application/rss+xml"/><item><title>A Short Profiling Story</title><link>http://claudio-ortolina.org/posts/a-short-profiling-story/</link><pubDate>Tue, 03 Nov 2020 11:42:42 +0000</pubDate><guid>http://claudio-ortolina.org/posts/a-short-profiling-story/</guid><description>While transcribing the talk I gave at the last ElixirConf.eu conference, one of my colleagues pointed out that I glossed over the details of one of the examples. This prompted me to do some digging and I want to share what I found.
The problem The example in question is a module responsible to fetch a file from a remote source and write it at the specified path.
The implementation is very simplistic and lacks both error handling and retry logic.</description></item><item><title>About</title><link>http://claudio-ortolina.org/about/</link><pubDate>Tue, 03 Nov 2020 00:00:00 +0000</pubDate><guid>http://claudio-ortolina.org/about/</guid><description>Hello! I&amp;rsquo;m Claudio Ortolina and this is my website.
I currently work as a software engineer at PSPDFKit GmbH.</description></item></channel></rss>